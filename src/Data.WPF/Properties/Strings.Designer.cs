// <auto-generated />
namespace DevZest.Data.Windows
{
    using System.Diagnostics;
    using System.Globalization;
    using System.Reflection;
    using System.Resources;

    internal static class Strings
    {
        private static readonly ResourceManager _resourceManager
            = new ResourceManager("DevZest.Data.Windows.Strings", typeof(Strings).GetTypeInfo().Assembly);

        /// <summary>
        /// The input string "{input}" is invalid.
        /// </summary>
        public static string GridLengthParser_InvalidInput(object input)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("GridLengthParser_InvalidInput", "input"), input);
        }

        /// <summary>
        /// The GridRange does not belong to the same Template.
        /// </summary>
        public static string GridRange_InvalidOwner
        {
            get { return GetString("GridRange_InvalidOwner"); }
        }

        /// <summary>
        /// The GridRange is empty.
        /// </summary>
        public static string GridRange_VerifyNotEmpty
        {
            get { return GetString("GridRange_VerifyNotEmpty"); }
        }

        /// <summary>
        /// The value is invalid. It does not belong to this RowManager.
        /// </summary>
        public static string RowManager_InvalidCurrentRow
        {
            get { return GetString("RowManager_InvalidCurrentRow"); }
        }

        /// <summary>
        /// The specified ordinal must be a top level row.
        /// </summary>
        public static string RowManager_OrdinalNotTopLevel
        {
            get { return GetString("RowManager_OrdinalNotTopLevel"); }
        }

        /// <summary>
        /// The EOF row cannot be deleted.
        /// </summary>
        public static string RowPresenter_DeleteEof
        {
            get { return GetString("RowPresenter_DeleteEof"); }
        }

        /// <summary>
        /// The column is invalid. It does not belong to the DataSet.
        /// </summary>
        public static string RowPresenter_VerifyColumn
        {
            get { return GetString("RowPresenter_VerifyColumn"); }
        }

        /// <summary>
        /// The row must be hierarchical.
        /// </summary>
        public static string RowPresenter_VerifyHierarchical
        {
            get { return GetString("RowPresenter_VerifyHierarchical"); }
        }

        /// <summary>
        /// The child model is invalid. It must be direct child model and has the same type.
        /// </summary>
        public static string TemplateBuilder_InvalidFlattenHierarchyChildModel
        {
            get { return GetString("TemplateBuilder_InvalidFlattenHierarchyChildModel"); }
        }

        /// <summary>
        /// Cannot repeat auto height GridRows[{index}] on cross axis.
        /// </summary>
        public static string Template_InvalidAutoHeightGridRow(object index)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Template_InvalidAutoHeightGridRow", "index"), index);
        }

        /// <summary>
        /// Cannot repeat auto width GridColumns[{index}] on cross axis.
        /// </summary>
        public static string Template_InvalidAutoWidthGridColumn(object index)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Template_InvalidAutoWidthGridColumn", "index"), index);
        }

        /// <summary>
        /// The RowRange is invalid. It must contain all RowItems and no DataItem.
        /// </summary>
        public static string Template_InvalidRowRange
        {
            get { return GetString("Template_InvalidRowRange"); }
        }

        /// <summary>
        /// Cannot repeat star height GridRows[{index}].
        /// </summary>
        public static string Template_InvalidStarHeightGridRow(object index)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Template_InvalidStarHeightGridRow", "index"), index);
        }

        /// <summary>
        /// Cannot repeat star width GridColumns[{index}].
        /// </summary>
        public static string Template_InvalidStarWidthGridColumn(object index)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Template_InvalidStarWidthGridColumn", "index"), index);
        }

        private static string GetString(string name, params string[] formatterNames)
        {
            var value = _resourceManager.GetString(name);

            Debug.Assert(value != null);

            if (formatterNames != null)
            {
                for (var i = 0; i < formatterNames.Length; i++)
                {
                    value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
                }
            }

            return value;
        }
    }
}
