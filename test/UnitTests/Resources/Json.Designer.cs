//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DevZest.Data.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Json {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Json() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DevZest.Data.Resources.Json", typeof(Json).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Boolean.And&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Boolean&quot;,
        ///               &quot;_Boolean&quot;
        ///            ],
        ///            &quot;Value&quot; : true
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Boolean_Add {
            get {
                return ResourceManager.GetString("Converter_Boolean_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Boolean.FromString&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_String&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_String&quot;,
        ///               &quot;_String&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;true&quot;
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Boolean_FromString {
            get {
                return ResourceManager.GetString("Converter_Boolean_FromString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Boolean.Not&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Boolean&quot;,
        ///               &quot;_Boolean&quot;
        ///            ],
        ///            &quot;Value&quot; : true
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Boolean_Not {
            get {
                return ResourceManager.GetString("Converter_Boolean_Not", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Boolean.Or&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Boolean&quot;,
        ///               &quot;_Boolean&quot;
        ///            ],
        ///            &quot;Value&quot; : true
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Boolean_Or {
            get {
                return ResourceManager.GetString("Converter_Boolean_Or", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.Add&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeId [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Byte_Add {
            get {
                return ResourceManager.GetString("Converter_Byte_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.BitwiseAnd&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;Ar [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Byte_BitwiseAnd {
            get {
                return ResourceManager.GetString("Converter_Byte_BitwiseAnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.BitwiseOr&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;Arg [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Byte_BitwiseOr {
            get {
                return ResourceManager.GetString("Converter_Byte_BitwiseOr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.BitwiseXor&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;Ar [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Byte_BitwiseXor {
            get {
                return ResourceManager.GetString("Converter_Byte_BitwiseXor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.Divide&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 12
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTy [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Byte_Divide {
            get {
                return ResourceManager.GetString("Converter_Byte_Divide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.Equal&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgT [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Byte_Equal {
            get {
                return ResourceManager.GetString("Converter_Byte_Equal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.FromBoolean&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Boolean&quot;,
        ///               &quot;_Boolean&quot;
        ///            ],
        ///            &quot;Value&quot; : true
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Byte_FromBoolean {
            get {
                return ResourceManager.GetString("Converter_Byte_FromBoolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.FromDecimal&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Decimal&quot;,
        ///               &quot;_Decimal&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Byte_FromDecimal {
            get {
                return ResourceManager.GetString("Converter_Byte_FromDecimal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.FromDouble&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Double&quot;,
        ///               &quot;_Double&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Byte_FromDouble {
            get {
                return ResourceManager.GetString("Converter_Byte_FromDouble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.FromInt16&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int16&quot;,
        ///               &quot;_Int16&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Byte_FromInt16 {
            get {
                return ResourceManager.GetString("Converter_Byte_FromInt16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.FromInt32&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int32&quot;,
        ///               &quot;_Int32&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Byte_FromInt32 {
            get {
                return ResourceManager.GetString("Converter_Byte_FromInt32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.FromInt64&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int64&quot;,
        ///               &quot;_Int64&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Byte_FromInt64 {
            get {
                return ResourceManager.GetString("Converter_Byte_FromInt64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.FromSingle&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Single&quot;,
        ///               &quot;_Single&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Byte_FromSingle {
            get {
                return ResourceManager.GetString("Converter_Byte_FromSingle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.FromString&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_String&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_String&quot;,
        ///               &quot;_String&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;5&quot;
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Byte_FromString {
            get {
                return ResourceManager.GetString("Converter_Byte_FromString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.GreaterThan&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Byte_GreaterThan {
            get {
                return ResourceManager.GetString("Converter_Byte_GreaterThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.GreaterThanOrEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Byte_GreaterThanOrEqual {
            get {
                return ResourceManager.GetString("Converter_Byte_GreaterThanOrEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.LessThan&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;A [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Byte_LessThan {
            get {
                return ResourceManager.GetString("Converter_Byte_LessThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.LessThanOrEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Byte_LessThanOrEqual {
            get {
                return ResourceManager.GetString("Converter_Byte_LessThanOrEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.Modulo&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTyp [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Byte_Modulo {
            get {
                return ResourceManager.GetString("Converter_Byte_Modulo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.Multiply&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgT [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Byte_Multiply {
            get {
                return ResourceManager.GetString("Converter_Byte_Multiply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.NotEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;A [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Byte_NotEqual {
            get {
                return ResourceManager.GetString("Converter_Byte_NotEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.OnesComplement&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 0
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Byte_OnesComplement {
            get {
                return ResourceManager.GetString("Converter_Byte_OnesComplement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.Substract&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;Arg [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Byte_Substract {
            get {
                return ResourceManager.GetString("Converter_Byte_Substract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;CaseExpression&quot;,
        ///      &quot;ArgTypeIds&quot; : [
        ///         &quot;_Boolean&quot;
        ///      ],
        ///      &quot;When&quot; : [
        ///         {
        ///            &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///            &quot;Expression&quot; : {
        ///               &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///               &quot;ArgTypeIds&quot; : [
        ///                  &quot;_Boolean&quot;,
        ///                  &quot;_Boolean&quot;
        ///               ],
        ///               &quot;Value&quot; : true
        ///            }
        ///         }
        ///      ],
        ///      &quot;Then&quot; : [
        ///         {
        ///            &quot;T [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_CaseExpression {
            get {
                return ResourceManager.GetString("Converter_CaseExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;CaseOnExpression&quot;,
        ///      &quot;ArgTypeIds&quot; : [
        ///         &quot;_Boolean&quot;,
        ///         &quot;_Boolean&quot;
        ///      ],
        ///      &quot;On&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Boolean&quot;,
        ///               &quot;_Boolean&quot;
        ///            ],
        ///            &quot;Value&quot; : true
        ///         }
        ///      },
        ///      &quot;When&quot; : [
        ///         {
        ///            &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_CaseOnExpression {
            get {
                return ResourceManager.GetString("Converter_CaseOnExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Char.Equal&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Char&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Char&quot;,
        ///               &quot;_Char&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;a&quot;
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Char&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;Ar [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Char_Equal {
            get {
                return ResourceManager.GetString("Converter_Char_Equal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Char&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Char.FromString&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_String&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_String&quot;,
        ///               &quot;_String&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;a&quot;
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Char_FromString {
            get {
                return ResourceManager.GetString("Converter_Char_FromString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Char.GreaterThan&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Char&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Char&quot;,
        ///               &quot;_Char&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;b&quot;
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Char&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Char_GreaterThan {
            get {
                return ResourceManager.GetString("Converter_Char_GreaterThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Char.GreaterThanOrEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Char&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Char&quot;,
        ///               &quot;_Char&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;b&quot;
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Char&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Char_GreaterThanOrEqual {
            get {
                return ResourceManager.GetString("Converter_Char_GreaterThanOrEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Char.LessThan&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Char&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Char&quot;,
        ///               &quot;_Char&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;a&quot;
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Char&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///             [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Char_LessThan {
            get {
                return ResourceManager.GetString("Converter_Char_LessThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Char.LessThanOrEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Char&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Char&quot;,
        ///               &quot;_Char&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;b&quot;
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Char&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Char_LessThanOrEqual {
            get {
                return ResourceManager.GetString("Converter_Char_LessThanOrEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Char.NotEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Char&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Char&quot;,
        ///               &quot;_Char&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;a&quot;
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Char&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///             [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Char_NotEqual {
            get {
                return ResourceManager.GetString("Converter_Char_NotEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Name&quot; : &quot;SalesOrderID&quot;
        ///}.
        /// </summary>
        internal static string Converter_Column {
            get {
                return ResourceManager.GetString("Converter_Column", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///      &quot;ArgTypeIds&quot; : [
        ///         &quot;_Int32&quot;,
        ///         &quot;_Int32&quot;
        ///      ],
        ///      &quot;Value&quot; : 5
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_ConstantExpression {
            get {
                return ResourceManager.GetString("Converter_ConstantExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_DateTime.Equal&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_DateTime&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_DateTime&quot;,
        ///               &quot;_DateTime&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;2016-06-14T00:00:00.000&quot;
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_DateTime&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_DateTime_Equal {
            get {
                return ResourceManager.GetString("Converter_DateTime_Equal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_DateTime&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_DateTime.FromString&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_String&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_String&quot;,
        ///               &quot;_String&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;2016/6/14&quot;
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_DateTime_FromString {
            get {
                return ResourceManager.GetString("Converter_DateTime_FromString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_DateTime.GreaterThan&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_DateTime&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_DateTime&quot;,
        ///               &quot;_DateTime&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;2016-06-15T00:00:00.000&quot;
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_DateTime&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_DateTime_GreaterThan {
            get {
                return ResourceManager.GetString("Converter_DateTime_GreaterThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_DateTime.GreaterThanOrEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_DateTime&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_DateTime&quot;,
        ///               &quot;_DateTime&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;2016-06-14T00:00:00.000&quot;
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_DateTime&quot;,
        ///         &quot;Expression&quot; : {
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_DateTime_GreaterThanOrEqual {
            get {
                return ResourceManager.GetString("Converter_DateTime_GreaterThanOrEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_DateTime.LessThan&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_DateTime&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_DateTime&quot;,
        ///               &quot;_DateTime&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;2016-06-13T00:00:00.000&quot;
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_DateTime&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;Typ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_DateTime_LessThan {
            get {
                return ResourceManager.GetString("Converter_DateTime_LessThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_DateTime.LessThanOrEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_DateTime&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_DateTime&quot;,
        ///               &quot;_DateTime&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;2016-06-14T00:00:00.000&quot;
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_DateTime&quot;,
        ///         &quot;Expression&quot; : {
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_DateTime_LessThanOrEqual {
            get {
                return ResourceManager.GetString("Converter_DateTime_LessThanOrEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_DateTime.NotEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_DateTime&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_DateTime&quot;,
        ///               &quot;_DateTime&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;2016-06-13T00:00:00.000&quot;
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_DateTime&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;Typ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_DateTime_NotEqual {
            get {
                return ResourceManager.GetString("Converter_DateTime_NotEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Decimal.Add&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Decimal&quot;,
        ///               &quot;_Decimal&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Decimal_Add {
            get {
                return ResourceManager.GetString("Converter_Decimal_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Decimal.Divide&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Decimal&quot;,
        ///               &quot;_Decimal&quot;
        ///            ],
        ///            &quot;Value&quot; : 15
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Decimal_Divide {
            get {
                return ResourceManager.GetString("Converter_Decimal_Divide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Decimal.Equal&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Decimal&quot;,
        ///               &quot;_Decimal&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Decimal_Equal {
            get {
                return ResourceManager.GetString("Converter_Decimal_Equal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Decimal.FromBoolean&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Boolean&quot;,
        ///               &quot;_Boolean&quot;
        ///            ],
        ///            &quot;Value&quot; : true
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Decimal_FromBoolean {
            get {
                return ResourceManager.GetString("Converter_Decimal_FromBoolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Decimal.FromByte&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Decimal_FromByte {
            get {
                return ResourceManager.GetString("Converter_Decimal_FromByte", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Decimal.FromDouble&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Double&quot;,
        ///               &quot;_Double&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Decimal_FromDouble {
            get {
                return ResourceManager.GetString("Converter_Decimal_FromDouble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Decimal.FromInt16&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int16&quot;,
        ///               &quot;_Int16&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Decimal_FromInt16 {
            get {
                return ResourceManager.GetString("Converter_Decimal_FromInt16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Decimal.FromInt32&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int32&quot;,
        ///               &quot;_Int32&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Decimal_FromInt32 {
            get {
                return ResourceManager.GetString("Converter_Decimal_FromInt32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Decimal.FromInt64&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int64&quot;,
        ///               &quot;_Int64&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Decimal_FromInt64 {
            get {
                return ResourceManager.GetString("Converter_Decimal_FromInt64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Decimal.FromSingle&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Single&quot;,
        ///               &quot;_Single&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Decimal_FromSingle {
            get {
                return ResourceManager.GetString("Converter_Decimal_FromSingle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Decimal.FromString&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_String&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_String&quot;,
        ///               &quot;_String&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;3&quot;
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Decimal_FromString {
            get {
                return ResourceManager.GetString("Converter_Decimal_FromString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Decimal.GreaterThan&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Decimal&quot;,
        ///               &quot;_Decimal&quot;
        ///            ],
        ///            &quot;Value&quot; : 4
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Decimal_GreaterThan {
            get {
                return ResourceManager.GetString("Converter_Decimal_GreaterThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Decimal.GreaterThanOrEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Decimal&quot;,
        ///               &quot;_Decimal&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExp [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Decimal_GreaterThanOrEqual {
            get {
                return ResourceManager.GetString("Converter_Decimal_GreaterThanOrEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Decimal.LessThan&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Decimal&quot;,
        ///               &quot;_Decimal&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Decimal_LessThan {
            get {
                return ResourceManager.GetString("Converter_Decimal_LessThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Decimal.LessThanOrEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Decimal&quot;,
        ///               &quot;_Decimal&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpres [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Decimal_LessThanOrEqual {
            get {
                return ResourceManager.GetString("Converter_Decimal_LessThanOrEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Decimal.Modulo&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Decimal&quot;,
        ///               &quot;_Decimal&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Decimal_Modulo {
            get {
                return ResourceManager.GetString("Converter_Decimal_Modulo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Decimal.Multiply&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Decimal&quot;,
        ///               &quot;_Decimal&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Decimal_Multiply {
            get {
                return ResourceManager.GetString("Converter_Decimal_Multiply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Decimal.Negate&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Decimal&quot;,
        ///               &quot;_Decimal&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Decimal_Negate {
            get {
                return ResourceManager.GetString("Converter_Decimal_Negate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Decimal.NotEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Decimal&quot;,
        ///               &quot;_Decimal&quot;
        ///            ],
        ///            &quot;Value&quot; : 2
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Decimal_NotEqual {
            get {
                return ResourceManager.GetString("Converter_Decimal_NotEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Decimal.Substract&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Decimal&quot;,
        ///               &quot;_Decimal&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Decimal_Substract {
            get {
                return ResourceManager.GetString("Converter_Decimal_Substract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Double&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Double.Add&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Double&quot;,
        ///               &quot;_Double&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///           [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Double_Add {
            get {
                return ResourceManager.GetString("Converter_Double_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Double&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Double.Divide&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Double&quot;,
        ///               &quot;_Double&quot;
        ///            ],
        ///            &quot;Value&quot; : 6
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Double_Divide {
            get {
                return ResourceManager.GetString("Converter_Double_Divide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Double.Equal&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Double&quot;,
        ///               &quot;_Double&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Double_Equal {
            get {
                return ResourceManager.GetString("Converter_Double_Equal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Double&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Double.FromBoolean&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Boolean&quot;,
        ///               &quot;_Boolean&quot;
        ///            ],
        ///            &quot;Value&quot; : true
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Double_FromBoolean {
            get {
                return ResourceManager.GetString("Converter_Double_FromBoolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Double&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Double.FromByte&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Double_FromByte {
            get {
                return ResourceManager.GetString("Converter_Double_FromByte", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Double&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Double.FromDecimal&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Decimal&quot;,
        ///               &quot;_Decimal&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Double_FromDecimal {
            get {
                return ResourceManager.GetString("Converter_Double_FromDecimal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Double&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Double.FromInt16&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int16&quot;,
        ///               &quot;_Int16&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Double_FromInt16 {
            get {
                return ResourceManager.GetString("Converter_Double_FromInt16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Double&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Double.FromInt32&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int32&quot;,
        ///               &quot;_Int32&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Double_FromInt32 {
            get {
                return ResourceManager.GetString("Converter_Double_FromInt32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Double&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Double.FromInt64&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int64&quot;,
        ///               &quot;_Int64&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Double_FromInt64 {
            get {
                return ResourceManager.GetString("Converter_Double_FromInt64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Double&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Double.FromSingle&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Single&quot;,
        ///               &quot;_Single&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Double_FromSingle {
            get {
                return ResourceManager.GetString("Converter_Double_FromSingle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Double&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Double.FromString&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_String&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_String&quot;,
        ///               &quot;_String&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;1&quot;
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Double_FromString {
            get {
                return ResourceManager.GetString("Converter_Double_FromString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Double.GreaterThan&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Double&quot;,
        ///               &quot;_Double&quot;
        ///            ],
        ///            &quot;Value&quot; : 4
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Double_GreaterThan {
            get {
                return ResourceManager.GetString("Converter_Double_GreaterThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Double.GreaterThanOrEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Double&quot;,
        ///               &quot;_Double&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpressi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Double_GreaterThanOrEqual {
            get {
                return ResourceManager.GetString("Converter_Double_GreaterThanOrEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Double.LessThan&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Double&quot;,
        ///               &quot;_Double&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Double_LessThan {
            get {
                return ResourceManager.GetString("Converter_Double_LessThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Double.LessThanOrEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Double&quot;,
        ///               &quot;_Double&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Double_LessThanOrEqual {
            get {
                return ResourceManager.GetString("Converter_Double_LessThanOrEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Double&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Double.Modulo&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Double&quot;,
        ///               &quot;_Double&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Double_Modulo {
            get {
                return ResourceManager.GetString("Converter_Double_Modulo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Double&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Double.Multiply&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Double&quot;,
        ///               &quot;_Double&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Double_Multiply {
            get {
                return ResourceManager.GetString("Converter_Double_Multiply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Double&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Double.Negate&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Double&quot;,
        ///               &quot;_Double&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Double_Negate {
            get {
                return ResourceManager.GetString("Converter_Double_Negate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Double.NotEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Double&quot;,
        ///               &quot;_Double&quot;
        ///            ],
        ///            &quot;Value&quot; : 2
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Double_NotEqual {
            get {
                return ResourceManager.GetString("Converter_Double_NotEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Double&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Double.Substract&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Double&quot;,
        ///               &quot;_Double&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Double_Substract {
            get {
                return ResourceManager.GetString("Converter_Double_Substract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Guid.Equal&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Guid&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Guid&quot;,
        ///               &quot;_Guid&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;00000000-0000-0000-0000-000000000000&quot;
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Guid&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;Co [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Guid_Equal {
            get {
                return ResourceManager.GetString("Converter_Guid_Equal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Guid&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Guid.FromString&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_String&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_String&quot;,
        ///               &quot;_String&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;00000000-0000-0000-0000-000000000000&quot;
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Guid_FromString {
            get {
                return ResourceManager.GetString("Converter_Guid_FromString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Guid.GreaterThan&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Guid&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Guid&quot;,
        ///               &quot;_Guid&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;00000000-0000-0000-0000-000000000000&quot;
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Guid&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Guid_GreaterThan {
            get {
                return ResourceManager.GetString("Converter_Guid_GreaterThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Guid.GreaterThanOrEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Guid&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Guid&quot;,
        ///               &quot;_Guid&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;00000000-0000-0000-0000-000000000000&quot;
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Guid&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Guid_GreaterThanOrEqual {
            get {
                return ResourceManager.GetString("Converter_Guid_GreaterThanOrEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Guid.LessThan&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Guid&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Guid&quot;,
        ///               &quot;_Guid&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;00000000-0000-0000-0000-000000000000&quot;
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Guid&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; :  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Guid_LessThan {
            get {
                return ResourceManager.GetString("Converter_Guid_LessThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Guid.LessThanOrEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Guid&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Guid&quot;,
        ///               &quot;_Guid&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;00000000-0000-0000-0000-000000000000&quot;
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Guid&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;Typ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Guid_LessThanOrEqual {
            get {
                return ResourceManager.GetString("Converter_Guid_LessThanOrEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Guid.NotEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Guid&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Guid&quot;,
        ///               &quot;_Guid&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;00000000-0000-0000-0000-000000000000&quot;
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Guid&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; :  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Guid_NotEqual {
            get {
                return ResourceManager.GetString("Converter_Guid_NotEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int16.Add&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int16&quot;,
        ///               &quot;_Int16&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;Arg [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int16_Add {
            get {
                return ResourceManager.GetString("Converter_Int16_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int16.BitwiseAnd&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int16&quot;,
        ///               &quot;_Int16&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int16_BitwiseAnd {
            get {
                return ResourceManager.GetString("Converter_Int16_BitwiseAnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int16.BitwiseOr&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int16&quot;,
        ///               &quot;_Int16&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///           [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int16_BitwiseOr {
            get {
                return ResourceManager.GetString("Converter_Int16_BitwiseOr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int16.BitwiseXor&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int16&quot;,
        ///               &quot;_Int16&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int16_BitwiseXor {
            get {
                return ResourceManager.GetString("Converter_Int16_BitwiseXor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int16.Divide&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int16&quot;,
        ///               &quot;_Int16&quot;
        ///            ],
        ///            &quot;Value&quot; : 15
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///             [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int16_Divide {
            get {
                return ResourceManager.GetString("Converter_Int16_Divide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int16.Equal&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int16&quot;,
        ///               &quot;_Int16&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///             [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int16_Equal {
            get {
                return ResourceManager.GetString("Converter_Int16_Equal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int16.FromBoolean&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Boolean&quot;,
        ///               &quot;_Boolean&quot;
        ///            ],
        ///            &quot;Value&quot; : true
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int16_FromBoolean {
            get {
                return ResourceManager.GetString("Converter_Int16_FromBoolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int16.FromByte&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int16_FromByte {
            get {
                return ResourceManager.GetString("Converter_Int16_FromByte", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int16.FromDecimal&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Decimal&quot;,
        ///               &quot;_Decimal&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int16_FromDecimal {
            get {
                return ResourceManager.GetString("Converter_Int16_FromDecimal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int16.FromDouble&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Double&quot;,
        ///               &quot;_Double&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int16_FromDouble {
            get {
                return ResourceManager.GetString("Converter_Int16_FromDouble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int16.FromInt32&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int32&quot;,
        ///               &quot;_Int32&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int16_FromInt32 {
            get {
                return ResourceManager.GetString("Converter_Int16_FromInt32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int16.FromInt64&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int64&quot;,
        ///               &quot;_Int64&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int16_FromInt64 {
            get {
                return ResourceManager.GetString("Converter_Int16_FromInt64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int16.FromSingle&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Single&quot;,
        ///               &quot;_Single&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int16_FromSingle {
            get {
                return ResourceManager.GetString("Converter_Int16_FromSingle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int16.FromString&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_String&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_String&quot;,
        ///               &quot;_String&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;1&quot;
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int16_FromString {
            get {
                return ResourceManager.GetString("Converter_Int16_FromString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int16.GreaterThan&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int16&quot;,
        ///               &quot;_Int16&quot;
        ///            ],
        ///            &quot;Value&quot; : 4
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int16_GreaterThan {
            get {
                return ResourceManager.GetString("Converter_Int16_GreaterThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int16.GreaterThanOrEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int16&quot;,
        ///               &quot;_Int16&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int16_GreaterThanOrEqual {
            get {
                return ResourceManager.GetString("Converter_Int16_GreaterThanOrEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int16.LessThan&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int16&quot;,
        ///               &quot;_Int16&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int16_LessThan {
            get {
                return ResourceManager.GetString("Converter_Int16_LessThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int16.LessThanOrEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int16&quot;,
        ///               &quot;_Int16&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int16_LessThanOrEqual {
            get {
                return ResourceManager.GetString("Converter_Int16_LessThanOrEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int16.Modulo&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int16&quot;,
        ///               &quot;_Int16&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int16_Modulo {
            get {
                return ResourceManager.GetString("Converter_Int16_Modulo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int16.Multiply&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int16&quot;,
        ///               &quot;_Int16&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int16_Multiply {
            get {
                return ResourceManager.GetString("Converter_Int16_Multiply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int16.Negate&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int16&quot;,
        ///               &quot;_Int16&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int16_Negate {
            get {
                return ResourceManager.GetString("Converter_Int16_Negate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int16.NotEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int16&quot;,
        ///               &quot;_Int16&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int16_NotEqual {
            get {
                return ResourceManager.GetString("Converter_Int16_NotEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int16.OnesComplement&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int16&quot;,
        ///               &quot;_Int16&quot;
        ///            ],
        ///            &quot;Value&quot; : 0
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int16_OnesComplement {
            get {
                return ResourceManager.GetString("Converter_Int16_OnesComplement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int16.Substract&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int16&quot;,
        ///               &quot;_Int16&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///           [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int16_Substract {
            get {
                return ResourceManager.GetString("Converter_Int16_Substract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int32.Add&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int32&quot;,
        ///               &quot;_Int32&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;Arg [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int32_Add {
            get {
                return ResourceManager.GetString("Converter_Int32_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int32.BitwiseAnd&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int32&quot;,
        ///               &quot;_Int32&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int32_BitwiseAnd {
            get {
                return ResourceManager.GetString("Converter_Int32_BitwiseAnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int32.BitwiseOr&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int32&quot;,
        ///               &quot;_Int32&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///           [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int32_BitwiseOr {
            get {
                return ResourceManager.GetString("Converter_Int32_BitwiseOr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int32.BitwiseXor&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int32&quot;,
        ///               &quot;_Int32&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int32_BitwiseXor {
            get {
                return ResourceManager.GetString("Converter_Int32_BitwiseXor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int32.Divide&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int32&quot;,
        ///               &quot;_Int32&quot;
        ///            ],
        ///            &quot;Value&quot; : 15
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///             [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int32_Divide {
            get {
                return ResourceManager.GetString("Converter_Int32_Divide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int32.Equal&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int32&quot;,
        ///               &quot;_Int32&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///             [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int32_Equal {
            get {
                return ResourceManager.GetString("Converter_Int32_Equal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int32.FromBoolean&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Boolean&quot;,
        ///               &quot;_Boolean&quot;
        ///            ],
        ///            &quot;Value&quot; : true
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int32_FromBoolean {
            get {
                return ResourceManager.GetString("Converter_Int32_FromBoolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int32.FromByte&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int32_FromByte {
            get {
                return ResourceManager.GetString("Converter_Int32_FromByte", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int32.FromDecimal&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Decimal&quot;,
        ///               &quot;_Decimal&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int32_FromDecimal {
            get {
                return ResourceManager.GetString("Converter_Int32_FromDecimal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int32.FromDouble&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Double&quot;,
        ///               &quot;_Double&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int32_FromDouble {
            get {
                return ResourceManager.GetString("Converter_Int32_FromDouble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int32.FromInt16&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int16&quot;,
        ///               &quot;_Int16&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int32_FromInt16 {
            get {
                return ResourceManager.GetString("Converter_Int32_FromInt16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int32.FromInt64&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int64&quot;,
        ///               &quot;_Int64&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int32_FromInt64 {
            get {
                return ResourceManager.GetString("Converter_Int32_FromInt64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int32.FromSingle&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Single&quot;,
        ///               &quot;_Single&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int32_FromSingle {
            get {
                return ResourceManager.GetString("Converter_Int32_FromSingle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int32.FromString&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_String&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_String&quot;,
        ///               &quot;_String&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;1&quot;
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int32_FromString {
            get {
                return ResourceManager.GetString("Converter_Int32_FromString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int32.GreaterThan&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int32&quot;,
        ///               &quot;_Int32&quot;
        ///            ],
        ///            &quot;Value&quot; : 4
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int32_GreaterThan {
            get {
                return ResourceManager.GetString("Converter_Int32_GreaterThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int32.GreaterThanOrEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int32&quot;,
        ///               &quot;_Int32&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int32_GreaterThanOrEqual {
            get {
                return ResourceManager.GetString("Converter_Int32_GreaterThanOrEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int32.LessThan&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int32&quot;,
        ///               &quot;_Int32&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int32_LessThan {
            get {
                return ResourceManager.GetString("Converter_Int32_LessThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int32.LessThanOrEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int32&quot;,
        ///               &quot;_Int32&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int32_LessThanOrEqual {
            get {
                return ResourceManager.GetString("Converter_Int32_LessThanOrEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int32.Modulo&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int32&quot;,
        ///               &quot;_Int32&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int32_Modulo {
            get {
                return ResourceManager.GetString("Converter_Int32_Modulo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int32.Multiply&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int32&quot;,
        ///               &quot;_Int32&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int32_Multiply {
            get {
                return ResourceManager.GetString("Converter_Int32_Multiply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int32.Negate&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int32&quot;,
        ///               &quot;_Int32&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int32_Negate {
            get {
                return ResourceManager.GetString("Converter_Int32_Negate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int32.NotEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int32&quot;,
        ///               &quot;_Int32&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int32_NotEqual {
            get {
                return ResourceManager.GetString("Converter_Int32_NotEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int32.OnesComplement&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int32&quot;,
        ///               &quot;_Int32&quot;
        ///            ],
        ///            &quot;Value&quot; : 0
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int32_OnesComplement {
            get {
                return ResourceManager.GetString("Converter_Int32_OnesComplement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int32.Substract&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int32&quot;,
        ///               &quot;_Int32&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///           [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int32_Substract {
            get {
                return ResourceManager.GetString("Converter_Int32_Substract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int64.Add&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int64&quot;,
        ///               &quot;_Int64&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;Arg [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int64_Add {
            get {
                return ResourceManager.GetString("Converter_Int64_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int64.BitwiseAnd&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int64&quot;,
        ///               &quot;_Int64&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int64_BitwiseAnd {
            get {
                return ResourceManager.GetString("Converter_Int64_BitwiseAnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int64.BitwiseOr&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int64&quot;,
        ///               &quot;_Int64&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///           [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int64_BitwiseOr {
            get {
                return ResourceManager.GetString("Converter_Int64_BitwiseOr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int64.BitwiseXor&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int64&quot;,
        ///               &quot;_Int64&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int64_BitwiseXor {
            get {
                return ResourceManager.GetString("Converter_Int64_BitwiseXor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int64.Divide&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int64&quot;,
        ///               &quot;_Int64&quot;
        ///            ],
        ///            &quot;Value&quot; : 15
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///             [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int64_Divide {
            get {
                return ResourceManager.GetString("Converter_Int64_Divide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int64.Equal&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int64&quot;,
        ///               &quot;_Int64&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///             [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int64_Equal {
            get {
                return ResourceManager.GetString("Converter_Int64_Equal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int64.FromBoolean&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Boolean&quot;,
        ///               &quot;_Boolean&quot;
        ///            ],
        ///            &quot;Value&quot; : true
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int64_FromBoolean {
            get {
                return ResourceManager.GetString("Converter_Int64_FromBoolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int64.FromByte&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int64_FromByte {
            get {
                return ResourceManager.GetString("Converter_Int64_FromByte", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int64.FromDecimal&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Decimal&quot;,
        ///               &quot;_Decimal&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int64_FromDecimal {
            get {
                return ResourceManager.GetString("Converter_Int64_FromDecimal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int64.FromDouble&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Double&quot;,
        ///               &quot;_Double&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int64_FromDouble {
            get {
                return ResourceManager.GetString("Converter_Int64_FromDouble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int64.FromInt16&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int16&quot;,
        ///               &quot;_Int16&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int64_FromInt16 {
            get {
                return ResourceManager.GetString("Converter_Int64_FromInt16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int64.FromInt32&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int32&quot;,
        ///               &quot;_Int32&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int64_FromInt32 {
            get {
                return ResourceManager.GetString("Converter_Int64_FromInt32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int64.FromSingle&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Single&quot;,
        ///               &quot;_Single&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int64_FromSingle {
            get {
                return ResourceManager.GetString("Converter_Int64_FromSingle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int64.FromString&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_String&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_String&quot;,
        ///               &quot;_String&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;1&quot;
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int64_FromString {
            get {
                return ResourceManager.GetString("Converter_Int64_FromString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int64.GreaterThan&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int64&quot;,
        ///               &quot;_Int64&quot;
        ///            ],
        ///            &quot;Value&quot; : 4
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int64_GreaterThan {
            get {
                return ResourceManager.GetString("Converter_Int64_GreaterThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int64.GreaterThanOrEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int64&quot;,
        ///               &quot;_Int64&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int64_GreaterThanOrEqual {
            get {
                return ResourceManager.GetString("Converter_Int64_GreaterThanOrEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int64.LessThan&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int64&quot;,
        ///               &quot;_Int64&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int64_LessThan {
            get {
                return ResourceManager.GetString("Converter_Int64_LessThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int64.LessThanOrEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int64&quot;,
        ///               &quot;_Int64&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int64_LessThanOrEqual {
            get {
                return ResourceManager.GetString("Converter_Int64_LessThanOrEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int64.Modulo&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int64&quot;,
        ///               &quot;_Int64&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int64_Modulo {
            get {
                return ResourceManager.GetString("Converter_Int64_Modulo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int64.Multiply&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int64&quot;,
        ///               &quot;_Int64&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int64_Multiply {
            get {
                return ResourceManager.GetString("Converter_Int64_Multiply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int64.Negate&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int64&quot;,
        ///               &quot;_Int64&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int64_Negate {
            get {
                return ResourceManager.GetString("Converter_Int64_Negate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int64.NotEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int64&quot;,
        ///               &quot;_Int64&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int64_NotEqual {
            get {
                return ResourceManager.GetString("Converter_Int64_NotEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int64.OnesComplement&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int64&quot;,
        ///               &quot;_Int64&quot;
        ///            ],
        ///            &quot;Value&quot; : 0
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Int64_OnesComplement {
            get {
                return ResourceManager.GetString("Converter_Int64_OnesComplement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Int64.Substract&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int64&quot;,
        ///               &quot;_Int64&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///           [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Int64_Substract {
            get {
                return ResourceManager.GetString("Converter_Int64_Substract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;ParamExpression&quot;,
        ///      &quot;ArgTypeIds&quot; : [
        ///         &quot;_Int32&quot;,
        ///         &quot;_Int32&quot;
        ///      ],
        ///      &quot;Value&quot; : 5,
        ///      &quot;SourceColumn&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Name&quot; : &quot;SalesOrderID&quot;
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_ParamExpression_NotNullSourceColumn {
            get {
                return ResourceManager.GetString("Converter_ParamExpression_NotNullSourceColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;ParamExpression&quot;,
        ///      &quot;ArgTypeIds&quot; : [
        ///         &quot;_Int32&quot;,
        ///         &quot;_Int32&quot;
        ///      ],
        ///      &quot;Value&quot; : 5,
        ///      &quot;SourceColumn&quot; : null
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_ParamExpression_NullSourceColumn {
            get {
                return ResourceManager.GetString("Converter_ParamExpression_NullSourceColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Single&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Single.Add&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Single&quot;,
        ///               &quot;_Single&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///           [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Single_Add {
            get {
                return ResourceManager.GetString("Converter_Single_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Single&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Single.Divide&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Single&quot;,
        ///               &quot;_Single&quot;
        ///            ],
        ///            &quot;Value&quot; : 6
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Single_Divide {
            get {
                return ResourceManager.GetString("Converter_Single_Divide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Single.Equal&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Single&quot;,
        ///               &quot;_Single&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Single_Equal {
            get {
                return ResourceManager.GetString("Converter_Single_Equal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Single&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Single.FromBoolean&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Boolean&quot;,
        ///               &quot;_Boolean&quot;
        ///            ],
        ///            &quot;Value&quot; : true
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Single_FromBoolean {
            get {
                return ResourceManager.GetString("Converter_Single_FromBoolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Single&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Single.FromByte&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Single_FromByte {
            get {
                return ResourceManager.GetString("Converter_Single_FromByte", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Single&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Single.FromDecimal&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Decimal&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Decimal&quot;,
        ///               &quot;_Decimal&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Single_FromDecimal {
            get {
                return ResourceManager.GetString("Converter_Single_FromDecimal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Single&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Single.FromDouble&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Double&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Double&quot;,
        ///               &quot;_Double&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Single_FromDouble {
            get {
                return ResourceManager.GetString("Converter_Single_FromDouble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Single&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Single.FromInt16&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int16&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int16&quot;,
        ///               &quot;_Int16&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Single_FromInt16 {
            get {
                return ResourceManager.GetString("Converter_Single_FromInt16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Single&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Single.FromInt32&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int32&quot;,
        ///               &quot;_Int32&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Single_FromInt32 {
            get {
                return ResourceManager.GetString("Converter_Single_FromInt32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Single&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Single.FromInt64&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int64&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Int64&quot;,
        ///               &quot;_Int64&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Single_FromInt64 {
            get {
                return ResourceManager.GetString("Converter_Single_FromInt64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Single&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Single.FromString&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_String&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_String&quot;,
        ///               &quot;_String&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;1&quot;
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Single_FromString {
            get {
                return ResourceManager.GetString("Converter_Single_FromString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Single.GreaterThan&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Single&quot;,
        ///               &quot;_Single&quot;
        ///            ],
        ///            &quot;Value&quot; : 4
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Single_GreaterThan {
            get {
                return ResourceManager.GetString("Converter_Single_GreaterThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Single.GreaterThanOrEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Single&quot;,
        ///               &quot;_Single&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpressi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Single_GreaterThanOrEqual {
            get {
                return ResourceManager.GetString("Converter_Single_GreaterThanOrEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Single.LessThan&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Single&quot;,
        ///               &quot;_Single&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Single_LessThan {
            get {
                return ResourceManager.GetString("Converter_Single_LessThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Single.LessThanOrEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Single&quot;,
        ///               &quot;_Single&quot;
        ///            ],
        ///            &quot;Value&quot; : 3
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Single_LessThanOrEqual {
            get {
                return ResourceManager.GetString("Converter_Single_LessThanOrEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Single&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Single.Modulo&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Single&quot;,
        ///               &quot;_Single&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Single_Modulo {
            get {
                return ResourceManager.GetString("Converter_Single_Modulo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Single&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Single.Multiply&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Single&quot;,
        ///               &quot;_Single&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Single_Multiply {
            get {
                return ResourceManager.GetString("Converter_Single_Multiply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Single&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Single.Negate&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Single&quot;,
        ///               &quot;_Single&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Single_Negate {
            get {
                return ResourceManager.GetString("Converter_Single_Negate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Single.NotEqual&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Single&quot;,
        ///               &quot;_Single&quot;
        ///            ],
        ///            &quot;Value&quot; : 2
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Single_NotEqual {
            get {
                return ResourceManager.GetString("Converter_Single_NotEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Single&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Single.Substract&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Single&quot;,
        ///               &quot;_Single&quot;
        ///            ],
        ///            &quot;Value&quot; : 5
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Single&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Single_Substract {
            get {
                return ResourceManager.GetString("Converter_Single_Substract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_String&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_String.Add&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_String&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_String&quot;,
        ///               &quot;_String&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;a&quot;
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_String&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///         [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_String_Add {
            get {
                return ResourceManager.GetString("Converter_String_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_String.Equal&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_String&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_String&quot;,
        ///               &quot;_String&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;a&quot;
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_String&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_String_Equal {
            get {
                return ResourceManager.GetString("Converter_String_Equal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_String&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_String.FromBoolean&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Boolean&quot;,
        ///               &quot;_Boolean&quot;
        ///            ],
        ///            &quot;Value&quot; : true
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_String_FromBoolean {
            get {
                return ResourceManager.GetString("Converter_String_FromBoolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_String&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_String.FromByte&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_String_FromByte {
            get {
                return ResourceManager.GetString("Converter_String_FromByte", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_String&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_String.FromChar&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Char&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Char&quot;,
        ///               &quot;_Char&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;a&quot;
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_String_FromChar {
            get {
                return ResourceManager.GetString("Converter_String_FromChar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///   {
        ///      &quot;ProductCategoryID&quot; : 0,
        ///      &quot;ParentProductCategoryID&quot; : null,
        ///      &quot;Name&quot; : &quot;Bikes&quot;,
        ///      &quot;RowGuid&quot; : &quot;cfbda25c-df71-47a7-b81b-64ee161aa37c&quot;,
        ///      &quot;ModifiedDate&quot; : &quot;2002-06-01T00:00:00.000&quot;,
        ///      &quot;SubCategories&quot; : [
        ///         {
        ///            &quot;ProductCategoryID&quot; : -2,
        ///            &quot;Name&quot; : &quot;Mountain Bikes&quot;,
        ///            &quot;RowGuid&quot; : &quot;2d364ade-264a-433c-b092-4fcbf3804e01&quot;,
        ///            &quot;ModifiedDate&quot; : &quot;2002-06-01T00:00:00.000&quot;,
        ///            &quot;SubCategories&quot; : []
        ///         },
        ///         [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MultiLevelProductCategory {
            get {
                return ResourceManager.GetString("MultiLevelProductCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///   {
        ///      &quot;ProductCategoryID&quot; : 1,
        ///      &quot;ParentProductCategoryID&quot; : null,
        ///      &quot;Name&quot; : &quot;Bikes&quot;,
        ///      &quot;RowGuid&quot; : &quot;cfbda25c-df71-47a7-b81b-64ee161aa37c&quot;,
        ///      &quot;ModifiedDate&quot; : &quot;2002-06-01T00:00:00.000&quot;,
        ///      &quot;SubCategories&quot; : [
        ///         {
        ///            &quot;ProductCategoryID&quot; : 5,
        ///            &quot;Name&quot; : &quot;Mountain Bikes&quot;,
        ///            &quot;RowGuid&quot; : &quot;2d364ade-264a-433c-b092-4fcbf3804e01&quot;,
        ///            &quot;ModifiedDate&quot; : &quot;2002-06-01T00:00:00.000&quot;,
        ///            &quot;SubCategories&quot; : []
        ///         },
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ProductCategories {
            get {
                return ResourceManager.GetString("ProductCategories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///   {
        ///      &quot;ProductCategoryID&quot; : 1,
        ///      &quot;ParentProductCategoryID&quot; : null,
        ///      &quot;Name&quot; : &quot;Bikes&quot;,
        ///      &quot;RowGuid&quot; : &quot;CFBDA25C-DF71-47A7-B81B-64EE161AA37C&quot;,
        ///      &quot;ModifiedDate&quot; : &quot;2002-06-01T00:00:00.000&quot;,
        ///      &quot;SubCategories&quot; : []
        ///   },
        ///   {
        ///      &quot;ProductCategoryID&quot; : 2,
        ///      &quot;ParentProductCategoryID&quot; : null,
        ///      &quot;Name&quot; : &quot;Other&quot;,
        ///      &quot;RowGuid&quot; : &quot;C657828D-D808-4ABA-91A3-AF2CE02300E9&quot;,
        ///      &quot;ModifiedDate&quot; : &quot;2002-06-01T00:00:00.000&quot;,
        ///      &quot;SubCategories&quot; : []
        ///   }
        ///].
        /// </summary>
        internal static string ProductCategoriesLevel1 {
            get {
                return ResourceManager.GetString("ProductCategoriesLevel1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///   {
        ///      &quot;SalesOrderID&quot; : 71774,
        ///      &quot;RevisionNumber&quot; : 2,
        ///      &quot;OrderDate&quot; : &quot;2008-06-01T00:00:00.000&quot;,
        ///      &quot;DueDate&quot; : &quot;2008-06-13T00:00:00.000&quot;,
        ///      &quot;ShipDate&quot; : &quot;2008-06-08T00:00:00.000&quot;,
        ///      &quot;Status&quot; : 5,
        ///      &quot;OnlineOrderFlag&quot; : false,
        ///      &quot;SalesOrderNumber&quot; : &quot;SO71774&quot;,
        ///      &quot;PurchaseOrderNumber&quot; : &quot;PO348186287&quot;,
        ///      &quot;AccountNumber&quot; : &quot;10-4020-000609&quot;,
        ///      &quot;CustomerID&quot; : 29847,
        ///      &quot;ShipToAddressID&quot; : 1092,
        ///      &quot;BillToAddressID&quot; : 1092,
        ///      &quot;ShipMethod&quot; : &quot;CA [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Sales_Order_71774 {
            get {
                return ResourceManager.GetString("Sales_Order_71774", resourceCulture);
            }
        }
    }
}
