//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DevZest.Data.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Json {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Json() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DevZest.Data.Resources.Json", typeof(Json).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Boolean.And&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Boolean&quot;,
        ///               &quot;_Boolean&quot;
        ///            ],
        ///            &quot;Value&quot; : true
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Boolean_Add {
            get {
                return ResourceManager.GetString("Converter_Boolean_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Boolean.FromString&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_String&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_String&quot;,
        ///               &quot;_String&quot;
        ///            ],
        ///            &quot;Value&quot; : &quot;true&quot;
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Boolean_FromString {
            get {
                return ResourceManager.GetString("Converter_Boolean_FromString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Boolean.Not&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Operand&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Boolean&quot;,
        ///               &quot;_Boolean&quot;
        ///            ],
        ///            &quot;Value&quot; : true
        ///         }
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_Boolean_Not {
            get {
                return ResourceManager.GetString("Converter_Boolean_Not", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Boolean.Or&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Boolean&quot;,
        ///               &quot;_Boolean&quot;
        ///            ],
        ///            &quot;Value&quot; : true
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Boolean_Or {
            get {
                return ResourceManager.GetString("Converter_Boolean_Or", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.Add&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeId [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Byte_Add {
            get {
                return ResourceManager.GetString("Converter_Byte_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.BitwiseAnd&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;Ar [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Byte_BitwiseAnd {
            get {
                return ResourceManager.GetString("Converter_Byte_BitwiseAnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.BitwiseOr&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;Arg [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Byte_BitwiseOr {
            get {
                return ResourceManager.GetString("Converter_Byte_BitwiseOr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.BitwiseXor&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;Ar [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Byte_BitwiseXor {
            get {
                return ResourceManager.GetString("Converter_Byte_BitwiseXor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.Divide&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 12
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTy [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Byte_Divide {
            get {
                return ResourceManager.GetString("Converter_Byte_Divide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;_Byte.Equal&quot;,
        ///      &quot;ArgTypeIds&quot; : [],
        ///      &quot;Left&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Byte&quot;,
        ///               &quot;_Byte&quot;
        ///            ],
        ///            &quot;Value&quot; : 1
        ///         }
        ///      },
        ///      &quot;Right&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Byte&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgT [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_Byte_Equal {
            get {
                return ResourceManager.GetString("Converter_Byte_Equal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;CaseExpression&quot;,
        ///      &quot;ArgTypeIds&quot; : [
        ///         &quot;_Boolean&quot;
        ///      ],
        ///      &quot;When&quot; : [
        ///         {
        ///            &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///            &quot;Expression&quot; : {
        ///               &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///               &quot;ArgTypeIds&quot; : [
        ///                  &quot;_Boolean&quot;,
        ///                  &quot;_Boolean&quot;
        ///               ],
        ///               &quot;Value&quot; : true
        ///            }
        ///         }
        ///      ],
        ///      &quot;Then&quot; : [
        ///         {
        ///            &quot;T [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_CaseExpression {
            get {
                return ResourceManager.GetString("Converter_CaseExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;CaseOnExpression&quot;,
        ///      &quot;ArgTypeIds&quot; : [
        ///         &quot;_Boolean&quot;,
        ///         &quot;_Boolean&quot;
        ///      ],
        ///      &quot;On&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///         &quot;Expression&quot; : {
        ///            &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///            &quot;ArgTypeIds&quot; : [
        ///               &quot;_Boolean&quot;,
        ///               &quot;_Boolean&quot;
        ///            ],
        ///            &quot;Value&quot; : true
        ///         }
        ///      },
        ///      &quot;When&quot; : [
        ///         {
        ///            &quot;TypeId&quot; : &quot;_Boolean&quot;,
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Converter_CaseOnExpression {
            get {
                return ResourceManager.GetString("Converter_CaseOnExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Name&quot; : &quot;SalesOrderID&quot;
        ///}.
        /// </summary>
        internal static string Converter_Column {
            get {
                return ResourceManager.GetString("Converter_Column", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;ConstantExpression&quot;,
        ///      &quot;ArgTypeIds&quot; : [
        ///         &quot;_Int32&quot;,
        ///         &quot;_Int32&quot;
        ///      ],
        ///      &quot;Value&quot; : 5
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_ConstantExpression {
            get {
                return ResourceManager.GetString("Converter_ConstantExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;ParamExpression&quot;,
        ///      &quot;ArgTypeIds&quot; : [
        ///         &quot;_Int32&quot;,
        ///         &quot;_Int32&quot;
        ///      ],
        ///      &quot;Value&quot; : 5,
        ///      &quot;SourceColumn&quot; : {
        ///         &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///         &quot;Name&quot; : &quot;SalesOrderID&quot;
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_ParamExpression_NotNullSourceColumn {
            get {
                return ResourceManager.GetString("Converter_ParamExpression_NotNullSourceColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;TypeId&quot; : &quot;_Int32&quot;,
        ///   &quot;Expression&quot; : {
        ///      &quot;TypeId&quot; : &quot;ParamExpression&quot;,
        ///      &quot;ArgTypeIds&quot; : [
        ///         &quot;_Int32&quot;,
        ///         &quot;_Int32&quot;
        ///      ],
        ///      &quot;Value&quot; : 5,
        ///      &quot;SourceColumn&quot; : null
        ///   }
        ///}.
        /// </summary>
        internal static string Converter_ParamExpression_NullSourceColumn {
            get {
                return ResourceManager.GetString("Converter_ParamExpression_NullSourceColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///   {
        ///      &quot;ProductCategoryID&quot; : 0,
        ///      &quot;ParentProductCategoryID&quot; : null,
        ///      &quot;Name&quot; : &quot;Bikes&quot;,
        ///      &quot;RowGuid&quot; : &quot;cfbda25c-df71-47a7-b81b-64ee161aa37c&quot;,
        ///      &quot;ModifiedDate&quot; : &quot;2002-06-01T00:00:00.000&quot;,
        ///      &quot;SubCategories&quot; : [
        ///         {
        ///            &quot;ProductCategoryID&quot; : -2,
        ///            &quot;Name&quot; : &quot;Mountain Bikes&quot;,
        ///            &quot;RowGuid&quot; : &quot;2d364ade-264a-433c-b092-4fcbf3804e01&quot;,
        ///            &quot;ModifiedDate&quot; : &quot;2002-06-01T00:00:00.000&quot;,
        ///            &quot;SubCategories&quot; : []
        ///         },
        ///         [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MultiLevelProductCategory {
            get {
                return ResourceManager.GetString("MultiLevelProductCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///   {
        ///      &quot;ProductCategoryID&quot; : 1,
        ///      &quot;ParentProductCategoryID&quot; : null,
        ///      &quot;Name&quot; : &quot;Bikes&quot;,
        ///      &quot;RowGuid&quot; : &quot;cfbda25c-df71-47a7-b81b-64ee161aa37c&quot;,
        ///      &quot;ModifiedDate&quot; : &quot;2002-06-01T00:00:00.000&quot;,
        ///      &quot;SubCategories&quot; : [
        ///         {
        ///            &quot;ProductCategoryID&quot; : 5,
        ///            &quot;Name&quot; : &quot;Mountain Bikes&quot;,
        ///            &quot;RowGuid&quot; : &quot;2d364ade-264a-433c-b092-4fcbf3804e01&quot;,
        ///            &quot;ModifiedDate&quot; : &quot;2002-06-01T00:00:00.000&quot;,
        ///            &quot;SubCategories&quot; : []
        ///         },
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ProductCategories {
            get {
                return ResourceManager.GetString("ProductCategories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///   {
        ///      &quot;ProductCategoryID&quot; : 1,
        ///      &quot;ParentProductCategoryID&quot; : null,
        ///      &quot;Name&quot; : &quot;Bikes&quot;,
        ///      &quot;RowGuid&quot; : &quot;CFBDA25C-DF71-47A7-B81B-64EE161AA37C&quot;,
        ///      &quot;ModifiedDate&quot; : &quot;2002-06-01T00:00:00.000&quot;,
        ///      &quot;SubCategories&quot; : []
        ///   },
        ///   {
        ///      &quot;ProductCategoryID&quot; : 2,
        ///      &quot;ParentProductCategoryID&quot; : null,
        ///      &quot;Name&quot; : &quot;Other&quot;,
        ///      &quot;RowGuid&quot; : &quot;C657828D-D808-4ABA-91A3-AF2CE02300E9&quot;,
        ///      &quot;ModifiedDate&quot; : &quot;2002-06-01T00:00:00.000&quot;,
        ///      &quot;SubCategories&quot; : []
        ///   }
        ///].
        /// </summary>
        internal static string ProductCategoriesLevel1 {
            get {
                return ResourceManager.GetString("ProductCategoriesLevel1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///   {
        ///      &quot;SalesOrderID&quot; : 71774,
        ///      &quot;RevisionNumber&quot; : 2,
        ///      &quot;OrderDate&quot; : &quot;2008-06-01T00:00:00.000&quot;,
        ///      &quot;DueDate&quot; : &quot;2008-06-13T00:00:00.000&quot;,
        ///      &quot;ShipDate&quot; : &quot;2008-06-08T00:00:00.000&quot;,
        ///      &quot;Status&quot; : 5,
        ///      &quot;OnlineOrderFlag&quot; : false,
        ///      &quot;SalesOrderNumber&quot; : &quot;SO71774&quot;,
        ///      &quot;PurchaseOrderNumber&quot; : &quot;PO348186287&quot;,
        ///      &quot;AccountNumber&quot; : &quot;10-4020-000609&quot;,
        ///      &quot;CustomerID&quot; : 29847,
        ///      &quot;ShipToAddressID&quot; : 1092,
        ///      &quot;BillToAddressID&quot; : 1092,
        ///      &quot;ShipMethod&quot; : &quot;CA [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Sales_Order_71774 {
            get {
                return ResourceManager.GetString("Sales_Order_71774", resourceCulture);
            }
        }
    }
}
